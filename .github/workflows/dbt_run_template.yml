name: dbt_run_template

on:
  workflow_call:
    inputs:
      dbt_command:
        type: string
        description: 'dbt commands to run'
        required: true
      environment:
        type: string
        description: 'github environment to get configuration values'
        required: true
      warehouse:
        type: string
        description: 'dbt warehouse'
        required: true

env:
  USE_VARS: "${{ vars.USE_VARS }}"
  DBT_VERSION: "${{ secrets.DBT_VERSION }}"
  DBT_PROFILES_DIR: "${{ secrets.DBT_PROFILES_DIR }}"
  ACCOUNT: "${{ secrets.ACCOUNT }}"
  ROLE: "${{ secrets.ROLE }}"
  USER: "${{ secrets.USER }}"
  PASSWORD: "${{ secrets.PASSWORD }}"
  REGION: "${{ secrets.REGION }}"
  DATABASE: "${{ secrets.DATABASE }}"
  SCHEMA: "${{ secrets.SCHEMA }}"

  WAREHOUSE: "${{ inputs.warehouse }}"

jobs:
  run_dbt_jobs:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: overwrite env vars
        if: ${{ env.USE_VARS == 'TRUE' }}
        run: |
          echo "DBT_VERSION=${{ vars.DBT_VERSION }}" >> $GITHUB_ENV
          echo "DBT_PROFILES_DIR=${{ vars.DBT_PROFILES_DIR }}" >> $GITHUB_ENV
          echo "ACCOUNT=${{ vars.ACCOUNT }}" >> $GITHUB_ENV
          echo "ROLE=${{ vars.ROLE }}" >> $GITHUB_ENV
          echo "USER=${{ vars.USER }}" >> $GITHUB_ENV
          echo "REGION=${{ vars.REGION }}" >> $GITHUB_ENV
          echo "DATABASE=${{ vars.DATABASE }}" >> $GITHUB_ENV
          echo "SCHEMA=${{ vars.SCHEMA }}" >> $GITHUB_ENV
        
      - name: install dependencies
        run: |
          pip3 install dbt-snowflake==${{ env.DBT_VERSION }} cli_passthrough requests click
          dbt deps

      - name: Run DBT Jobs
        run: |
          ${{ inputs.dbt_command }}
